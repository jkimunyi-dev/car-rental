###
# Car Rental API - User Tests
# Make sure the server is running on http://localhost:3000
# NOTE: This test file uses users created in auth-test.http
###

# Variables
@baseUrl = http://localhost:3000/api
@adminEmail = jkkimunyi@gmail.com
@adminPassword = @_Kimunyi123!
@testUserEmail = kimunyijimmy@gmail.com
@testUserPassword = Kimunyi123!
@secondUserEmail = jkelly911254@gmail.com
@secondUserPassword = Kelly911254!

# Test tokens (will be set after login)
@adminToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjbWNoemJjZ2kwMDAwOXpkZ3F6eXBzaHN5IiwiaWF0IjoxNzUxMzU2MjUzLCJleHAiOjE3NTEzNTk4NTN9.Dhrz6r_xa5enHjsALixVtqAQtrNjMxuSp2d-SjQHhOg
@userToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjbWNrODBoZjEwMDAzaXQzdWdwYWRyajY0IiwiaWF0IjoxNzUxMzU2Mjg1LCJleHAiOjE3NTEzNTk4ODV9.-YyFeevStFiSR0-9n5av-vRR5omqziEJh02UyR7K-Mk
@secondUserToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjbWNnc25ueXgwMDA1OXo5aXNyNXE2YTk1IiwiaWF0IjoxNzUxMTQ4Njc1LCJleHAiOjE3NTExNTIyNzV9.wF77-d2RE5vPmnTl-VEXkOY55n-NFjVLZUls8_6RCN4
@userId = cmcgnvuha00009z4i4org34r1
@secondUserId = cmcgsnnyx00059z9isr5q6a95

###
# 1. AUTHENTICATION TESTS
###

### Login as Admin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{adminEmail}}",
  "password": "{{adminPassword}}"
}

### Login as Test User (Jimmy)
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{testUserEmail}}",
  "password": "{{testUserPassword}}"
}

### Login as Second User (Kelly)
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{secondUserEmail}}",
  "password": "{{secondUserPassword}}"
}

###
# 2. USER PROFILE TESTS
###

### Get Current User Profile (Jimmy)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

### Update User Profile (Jimmy)
PATCH {{baseUrl}}/users/profile
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "firstName": "Jimmy Updated",
  "lastName": "Kimunyi Updated",
  "phone": "+254113514113",
  "dateOfBirth": "2003-08-05",
  "licenseNumber": "DL123456789",
  "address": "123 Updated Street, Nairobi",
  "city": "Nairobi",
  "country": "Kenya",
  "zipCode": "00100"
}

### Get Updated Profile (Jimmy)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

### Get Second User Profile (Kelly)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{secondUserToken}}

### Update Second User Profile (Kelly)
PATCH {{baseUrl}}/users/profile
Content-Type: application/json
Authorization: Bearer {{secondUserToken}}

{
  "firstName": "Kelly Updated",
  "lastName": "James Updated",
  "phone": "+254701234568",
  "dateOfBirth": "1995-05-16",
  "licenseNumber": "DL987654321",
  "address": "456 Updated Avenue, Mombasa",
  "city": "Mombasa",
  "country": "Kenya",
  "zipCode": "80100"
}

###
# 3. AVATAR/IMAGE UPLOAD TESTS
###

### Upload Avatar for Jimmy (Sample Image Data)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="jimmy-avatar.jpg"
Content-Type: image/jpeg

< ./test-images/jimmy-avatar.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Upload Avatar for Kelly (Sample Image Data)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{secondUserToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="kelly-avatar.jpeg"
Content-Type: image/png

< ./test-images/kelly-avatar.jpeg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Upload Avatar with Base64 Data (Jimmy) - Alternative Method
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="jimmy-new-avatar.jpg"
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCdABmX/9k=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Get Profile After Avatar Upload (Jimmy)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

### Get Profile After Avatar Upload (Kelly)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{secondUserToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="large-image.jpg"
Content-Type: image/jpeg

# This would be a large base64 encoded image over 5MB
# For testing purposes, this would fail with "File size too large" error
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Upload Avatar with Different Image Formats - WebP (Jimmy)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="jimmy-avatar.webp"
Content-Type: image/webp

UklGRjoAAABXRUJQVlA4IC4AAACyAgCdASoBAAEALmk0mk0iIiIiIgBoSygABc6zbAAA/v56B4PiOf7+af7+YQA=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Delete Avatar (Jimmy)
DELETE {{baseUrl}}/users/profile/avatar
Authorization: Bearer {{userToken}}

### Delete Avatar (Kelly)
DELETE {{baseUrl}}/users/profile/avatar
Authorization: Bearer {{secondUserToken}}

### Upload Another Avatar After Deletion (Jimmy)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="jimmy-new-avatar.jpg"
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCdABmX/9k=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Replace Existing Avatar (Kelly)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{secondUserToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="kelly-replacement.png"
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###
# 4. PASSWORD MANAGEMENT TESTS
###

### Change Password (Jimmy)
PATCH {{baseUrl}}/users/change-password
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "currentPassword": "{{testUserPassword}}",
  "newPassword": "NewKimunyi123!"
}

### Login with New Password (Jimmy)
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{testUserEmail}}",
  "password": "NewKimunyi123!"
}

### Change Password Back (Jimmy)
PATCH {{baseUrl}}/users/change-password
Content-Type: application/json
Authorization: Bearer {{userToken}}

{
  "currentPassword": "NewKimunyi123!",
  "newPassword": "{{testUserPassword}}"
}

### Change Password (Kelly)
PATCH {{baseUrl}}/users/change-password
Content-Type: application/json
Authorization: Bearer {{secondUserToken}}

{
  "currentPassword": "{{secondUserPassword}}",
  "newPassword": "NewKelly911254!"
}

### Change Password Back (Kelly)
PATCH {{baseUrl}}/users/change-password
Content-Type: application/json
Authorization: Bearer {{secondUserToken}}

{
  "currentPassword": "NewKelly911254!",
  "newPassword": "{{secondUserPassword}}"
}

###
# 5. USER ACTIVITY TESTS
###

### Get User Activity Log (Jimmy)
GET {{baseUrl}}/users/activity?page=1&limit=10
Authorization: Bearer {{userToken}}

### Get User Activity with Different Pagination (Jimmy)
GET {{baseUrl}}/users/activity?page=2&limit=5
Authorization: Bearer {{userToken}}

### Get User Activity Log (Kelly)
GET {{baseUrl}}/users/activity?page=1&limit=10
Authorization: Bearer {{secondUserToken}}

###
# 6. ADMIN USER MANAGEMENT TESTS
###

### Get All Users (Admin only)
GET {{baseUrl}}/users?page=1&limit=10
Authorization: Bearer {{adminToken}}

### Search Users by Name (Jimmy)
GET {{baseUrl}}/users?page=1&limit=10&search=Jimmy
Authorization: Bearer {{adminToken}}

### Search Users by Name (Kelly)
GET {{baseUrl}}/users?page=1&limit=10&search=Kelly
Authorization: Bearer {{adminToken}}

### Search Users by Email Pattern
GET {{baseUrl}}/users?page=1&limit=10&search=gmail.com
Authorization: Bearer {{adminToken}}

### Filter Users by Role (Customer)
GET {{baseUrl}}/users?page=1&limit=10&role=CUSTOMER
Authorization: Bearer {{adminToken}}

### Filter Users by Role (Admin)
GET {{baseUrl}}/users?page=1&limit=10&role=ADMIN
Authorization: Bearer {{adminToken}}

### Filter Active Users
GET {{baseUrl}}/users?page=1&limit=10&isActive=true
Authorization: Bearer {{adminToken}}

### Filter Inactive Users
GET {{baseUrl}}/users?page=1&limit=10&isActive=false
Authorization: Bearer {{adminToken}}

### Get Specific User by ID (Admin only) - Use Jimmy's ID
GET {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{adminToken}}

### Get Specific User by ID (Admin only) - Use Kelly's ID
GET {{baseUrl}}/users/{{secondUserId}}
Authorization: Bearer {{adminToken}}

### Update User by ID (Admin only) - Update Jimmy
PATCH {{baseUrl}}/users/{{userId}}
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "firstName": "Jimmy Admin Updated",
  "lastName": "Kimunyi Admin Updated",
  "phone": "+254113514114",
  "role": "CUSTOMER",
  "isActive": true
}

### Update User by ID (Admin only) - Update Kelly
PATCH {{baseUrl}}/users/{{secondUserId}}
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "firstName": "Kelly Admin Updated",
  "lastName": "James Admin Updated",
  "phone": "+254701234569",
  "role": "CUSTOMER",
  "isActive": true
}

### Create Additional Test User
POST {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "email": "testuser3@example.com",
  "password": "TestUser123!",
  "firstName": "Third",
  "lastName": "User",
  "phone": "+254712345678",
  "dateOfBirth": "1992-06-15",
  "role": "CUSTOMER",
  "isActive": true,
  "isVerified": false
}

### Create Agent User
POST {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "email": "eb14.55919.21@student.chuka.ac.ke",
  "password": "AgentUser123!",
  "firstName": "Purity",
  "lastName": "Mallity",
  "phone": "+254723456789",
  "dateOfBirth": "1988-03-20",
  "role": "AGENT",
  "isActive": true,
  "isVerified": true
}

###
# 7. USER STATUS MANAGEMENT TESTS
###

### Deactivate User (Jimmy)
PATCH {{baseUrl}}/users/{{userId}}/deactivate
Authorization: Bearer {{adminToken}}

### Activate User (Jimmy)
PATCH {{baseUrl}}/users/{{userId}}/activate
Authorization: Bearer {{adminToken}}

### Login with Activated User (Should Work) - Jimmy
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{testUserEmail}}",
  "password": "{{testUserPassword}}"
}

### Deactivate Second User (Kelly)
PATCH {{baseUrl}}/users/{{secondUserId}}/deactivate
Authorization: Bearer {{adminToken}}

### Activate Second User (Kelly)
PATCH {{baseUrl}}/users/{{secondUserId}}/activate
Authorization: Bearer {{adminToken}}

###
# 8. IMAGE UPLOAD EDGE CASES AND VALIDATION TESTS
###

### Upload Avatar with Special Characters in Filename
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="special-chars-@#$%^&*().jpg"
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCdABmX/9k=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Upload Multiple Files (Should Only Process First)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="first.jpg"
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCdABmX/9k=
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="second.jpg"
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCdABmX/9k=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###
# 9. IMAGE UPLOAD SUCCESS FLOW TESTS
###

### Successful Upload - Test All Supported Formats

### Upload JPEG Avatar (Jimmy)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="jimmy-success.jpg"
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCdABmX/9k=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Upload PNG Avatar (Kelly)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{secondUserToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="kelly-success.png"
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Upload WebP Avatar (Jimmy)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="jimmy-webp.webp"
Content-Type: image/webp

UklGRk4AAABXRUJQVlA4IEIAAACyAgCdASoBAAEALmk0mk0iIiIiIgBoSygABc6zbAAA/v56B4PiOf7+af7+YQA=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Verify Profile Updates After Successful Uploads
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

GET {{baseUrl}}/users/profile
Authorization: Bearer {{secondUserToken}}

###
# 10. ERROR HANDLING TESTS
###

###
# 11. COMPREHENSIVE IMAGE TESTING WORKFLOW
###

### Complete Image Upload and Management Workflow

### Step 1: Upload Initial Avatar (Jimmy)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="workflow-initial.jpg"
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCdABmX/9k=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Step 2: Verify Upload Success
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

### Step 3: Replace Avatar
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="workflow-replacement.png"
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAAEUlEQVR42mP8/5+hHgAIhAJ/wlvuFgAAAABJRU5ErkJggg==
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Step 4: Verify Replacement
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

### Step 5: Delete Avatar
DELETE {{baseUrl}}/users/profile/avatar
Authorization: Bearer {{userToken}}

### Step 6: Verify Deletion
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

### Step 7: Upload Final Avatar
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{userToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="workflow-final.webp"
Content-Type: image/webp

UklGRk4AAABXRUJQVlA4IEIAAACyAgCdASoBAAEALmk0mk0iIiIiIgBoSygABc6zbAAA/v56B4PiOf7+af7+YQA=
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Step 8: Final Verification
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

###
# 12. PAGINATION TESTS
###

### Test Large Page Size
GET {{baseUrl}}/users?page=1&limit=100
Authorization: Bearer {{adminToken}}

### Test Beyond Available Pages
GET {{baseUrl}}/users?page=999&limit=10
Authorization: Bearer {{adminToken}}

### Test Invalid Page Parameters
GET {{baseUrl}}/users?page=0&limit=-5
Authorization: Bearer {{adminToken}}

###
# 13. SEARCH AND FILTER COMBINATION TESTS
###

### Search Active Customers
GET {{baseUrl}}/users?search=Kimunyi&role=CUSTOMER&isActive=true
Authorization: Bearer {{adminToken}}

### Search by Email Pattern
GET {{baseUrl}}/users?search=gmail.com
Authorization: Bearer {{adminToken}}

### Search by First Name (Jimmy)
GET {{baseUrl}}/users?search=Jimmy
Authorization: Bearer {{adminToken}}

### Search by First Name (Kelly)
GET {{baseUrl}}/users?search=Kelly
Authorization: Bearer {{adminToken}}

### Search by Last Name (Kimunyi)
GET {{baseUrl}}/users?search=Kimunyi
Authorization: Bearer {{adminToken}}

### Search by Last Name (James)
GET {{baseUrl}}/users?search=James
Authorization: Bearer {{adminToken}}

###
# 14. CLEANUP AND FINAL VERIFICATION
###

### Final Profile Check (Jimmy)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{userToken}}

### Final Profile Check (Kelly)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{secondUserToken}}

### Final Admin Check - All Users
GET {{baseUrl}}/users
Authorization: Bearer {{adminToken}}

### Final Activity Log Check (Jimmy)
GET {{baseUrl}}/users/activity?page=1&limit=20
Authorization: Bearer {{userToken}}

### Final Activity Log Check (Kelly)
GET {{baseUrl}}/users/activity?page=1&limit=20
Authorization: Bearer {{secondUserToken}}

###
# END OF TESTS
###

# Notes for Image Upload Testing:
# 1. The base64 encoded images used are minimal valid images for testing
# 2. Replace file paths in < ./test-images/... with actual image files if available
# 3. For production testing, use actual image files from your filesystem
# 4. The multipart/form-data format is correctly structured for file uploads
# 5. Test both successful uploads and various failure scenarios
# 6. Monitor server logs for Cloudinary upload confirmations
# 7. Verify that old images are properly deleted when replaced
# 8. Check that avatar URLs are correctly returned and stored
# 9. Test file size limits and supported formats
# 10. Validate proper error messages for invalid uploads

# File Upload Test Instructions:
# 1. Create a 'test-images' folder in your project root
# 2. Add sample images: jimmy-avatar.jpg, kelly-avatar.jpeg
# 3. Adjust file paths in the upload requests as needed
# 4. For automated testing, use the base64 encoded images provided
# 5. For manual testing, use actual image files from your system